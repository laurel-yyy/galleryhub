# Generated by Django 3.2 on 2024-10-28 00:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    replaces = [('core', '0001_initial'), ('core', '0002_auto_20240926_1938'), ('core', '0003_artwork_year'), ('core', '0004_gallery_image'), ('core', '0005_alter_author_description')]

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Artwork',
            fields=[
                ('title', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('description', models.TextField(default='artwork description')),
                ('image', models.ImageField(upload_to='img/artwork')),
                ('rating', models.FloatField(default=3.0)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('description', models.TextField(default='Author description')),
                ('rating', models.FloatField(default=3.0)),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('gallery_name', models.CharField(max_length=300, primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=50)),
                ('description', models.TextField(default='gallery description')),
                ('rating', models.FloatField(default=3.0)),
                ('visitor_capacity', models.IntegerField(default=300)),
                ('image', models.ImageField(default='img/gallery/default.jpg', upload_to='img/gallery')),
            ],
        ),
        migrations.CreateModel(
            name='StyleTag',
            fields=[
                ('tag_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('description', models.TextField(default='styletag description')),
                ('artwork', models.ManyToManyField(related_name='styletag', to='core.Artwork')),
            ],
        ),
        migrations.CreateModel(
            name='ReservationOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.TimeField(auto_now_add=True)),
                ('order_date', models.DateField()),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation', to='core.gallery')),
                ('user_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='artwork',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artwork', to='core.author'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='gallery',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artwork', to='core.gallery'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='year',
            field=models.PositiveIntegerField(default=2000),
        ),
    ]
